{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/src/TotalByHour.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction buildSPD(data) {\n  const spd = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"SPD\") {\n      let spdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      spd.push(spdnew);\n    }\n  }\n\n  return spd;\n}\n\nfunction buildFDP(data) {\n  const fdp = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"FDP\") {\n      let fdpnew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      fdp.push(fdpnew);\n    }\n  }\n\n  return fdp;\n}\n\nfunction buildAFD(data) {\n  const afd = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"AfD\") {\n      let afdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      afd.push(afdnew);\n    }\n  }\n\n  return afd;\n}\n\nfunction buildLinke(data) {\n  const linke = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"Linke\") {\n      let linkenew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      linke.push(linkenew);\n    }\n  }\n\n  return linke;\n}\n\nfunction buildGruen(data) {\n  const gruen = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"B90\") {\n      let gruennew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      gruen.push(gruennew);\n    }\n  }\n\n  return gruen;\n}\n\nfunction buildParteilos(data) {\n  const parteilos = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let parteilosnew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      parteilos.push(parteilosnew);\n    }\n  }\n\n  return parteilos;\n}\n\nfunction buildCSU(data) {\n  const csu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CSU\") {\n      let csunew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      csu.push(csunew);\n    }\n  }\n\n  return csu;\n}\n\nfunction buildCDU(data) {\n  const cdu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      cdu.push(cdunew);\n    }\n  }\n\n  return cdu;\n}\n\nfunction TotalByHour() {\n  _s();\n\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAFD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  cosnt[(csu, setCSU)] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n  const [hour, setHour] = useState({});\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: \"label\"\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    scales: {\n      xAxes: [{\n        display: true\n      }],\n      yAxes: []\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/countTotalByHourAndParty\").then(response => {\n        return response.json();\n      }).then(data => {\n        //console.log(data);\n        let chartdataCDU = buildCDU(data);\n        setCDU(chartdataCDU);\n        let chartdataSPD = buildSPD(data);\n        setSPD(chartdataSPD);\n        let chartdataFDP = buildFDP(data);\n        setFDP(chartdataFDP);\n        let chartdataAFD = buildAFD(data);\n        setAFD(chartdataAFD);\n        let chartdataLinke = buildLinke(data);\n        setLinke(chartdataLinke);\n        let chartdataGruen = buildGruen(data);\n        setGruen(chartdataGruen);\n        let chartdataCSU = buildCSU(data);\n        setCSU(chartdataCSU);\n        let chartdataParteilos = buildParteilos(data);\n        setParteilos(chartdataParteilos);\n        console.log(chartdataParteilos);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"lala\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TotalByHour, \"FldzNoCFp1C1EF0i0Gj/Iv8Fpok=\");\n\n_c = TotalByHour;\nexport default TotalByHour;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalByHour\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/src/TotalByHour.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","buildSPD","data","spd","d","_id","party","spdnew","x","hour","y","count","push","buildFDP","fdp","fdpnew","buildAFD","afd","afdnew","buildLinke","linke","linkenew","buildGruen","gruen","gruennew","buildParteilos","parteilos","parteilosnew","buildCSU","csu","csunew","buildCDU","cdu","cdunew","TotalByHour","setCDU","setSPD","setFDP","setAFD","setLinke","setGruen","cosnt","setCSU","setParteilos","setHour","options","responsive","tooltips","mode","elements","line","fill","scales","xAxes","display","yAxes","fetchData","fetch","then","response","json","chartdataCDU","chartdataSPD","chartdataFDP","chartdataAFD","chartdataLinke","chartdataGruen","chartdataCSU","chartdataParteilos","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\n\nfunction buildSPD(data) {\n  const spd = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"SPD\") {\n      let spdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      spd.push(spdnew);\n    }\n  }\n  return spd;\n}\nfunction buildFDP(data) {\n  const fdp = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"FDP\") {\n      let fdpnew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      fdp.push(fdpnew);\n    }\n  }\n  return fdp;\n}\nfunction buildAFD(data) {\n  const afd = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"AfD\") {\n      let afdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      afd.push(afdnew);\n    }\n  }\n  return afd;\n}\nfunction buildLinke(data) {\n  const linke = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"Linke\") {\n      let linkenew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      linke.push(linkenew);\n    }\n  }\n  return linke;\n}\nfunction buildGruen(data) {\n  const gruen = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"B90\") {\n      let gruennew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      gruen.push(gruennew);\n    }\n  }\n  return gruen;\n}\n\nfunction buildParteilos(data) {\n  const parteilos = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let parteilosnew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      parteilos.push(parteilosnew);\n    }\n  }\n  return parteilos;\n}\nfunction buildCSU(data) {\n  const csu = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"CSU\") {\n      let csunew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      csu.push(csunew);\n    }\n  }\n  return csu;\n}\nfunction buildCDU(data) {\n  const cdu = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      cdu.push(cdunew);\n    }\n  }\n  return cdu;\n}\n\nfunction TotalByHour() {\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAFD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  cosnt[(csu, setCSU)] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n\n  const [hour, setHour] = useState({});\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: \"label\",\n    },\n    elements: {\n      line: {\n        fill: false,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          display: true,\n        },\n      ],\n      yAxes: [],\n    },\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/countTotalByHourAndParty\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          //console.log(data);\n          let chartdataCDU = buildCDU(data);\n          setCDU(chartdataCDU);\n          let chartdataSPD = buildSPD(data);\n          setSPD(chartdataSPD);\n          let chartdataFDP = buildFDP(data);\n          setFDP(chartdataFDP);\n          let chartdataAFD = buildAFD(data);\n          setAFD(chartdataAFD);\n          let chartdataLinke = buildLinke(data);\n          setLinke(chartdataLinke);\n          let chartdataGruen = buildGruen(data);\n          setGruen(chartdataGruen);\n          let chartdataCSU = buildCSU(data);\n          setCSU(chartdataCSU);\n          let chartdataParteilos = buildParteilos(data);\n          setParteilos(chartdataParteilos);\n\n          console.log(chartdataParteilos);\n        });\n    };\n    fetchData();\n  }, []);\n  return <div>lala</div>;\n}\n\nexport default TotalByHour;\n"]},"metadata":{},"sourceType":"module"}