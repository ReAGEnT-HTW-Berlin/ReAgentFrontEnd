{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\"; //const hour = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction buildSPD(data) {\n  const spd = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"SPD\") {\n      let spdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      spd.push(spdnew);\n    }\n  }\n\n  return spd;\n}\n\nfunction buildFDP(data) {\n  const fdp = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"FDP\") {\n      let fdpnew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      fdp.push(fdpnew);\n    }\n  }\n\n  return fdp;\n}\n\nfunction buildAFD(data) {\n  const afd = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"AfD\") {\n      let afdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      afd.push(afdnew);\n    }\n  }\n\n  return afd;\n}\n\nfunction buildLinke(data) {\n  const linke = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"Linke\") {\n      let linkenew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      linke.push(linkenew);\n    }\n  }\n\n  return linke;\n}\n\nfunction buildGruen(data) {\n  const gruen = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"Gruen\") {\n      let gruennew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      gruen.push(gruennew);\n    }\n  }\n\n  return gruen;\n}\n\nfunction buildCDU(data) {\n  const cdu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      cdu.push(cdunew);\n    }\n  }\n\n  return cdu;\n}\n\nconst t = [];\n\nfunction Charts() {\n  _s();\n\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n  const [cdu, setCDU] = useState({});\n  const [spd, setSPD] = useState({});\n  const [fdp, setFDP] = useState({});\n  const [afd, setAFD] = useState({});\n  const [linke, setLinke] = useState({});\n  const [gruen, setGruen] = useState({});\n  const [hour, setHour] = useState({});\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: \"label\"\n    },\n    elements: {\n      line: {\n        fill: false\n      }\n    },\n    scales: {\n      xAxes: [{\n        display: true\n      }],\n      yAxes: []\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/jsonProcessed\").then(response => {\n        return response.json();\n      }).then(data => {\n        //console.log(data);\n        let chartdataCDU = buildCDU(data);\n        setCDU(chartdataCDU);\n        let chartdataSPD = buildSPD(data);\n        setSPD(chartdataSPD);\n        let chartdataFDP = buildFDP(data);\n        setFDP(chartdataFDP);\n        let chartdataAFD = buildAFD(data);\n        setAFD(chartdataAFD);\n        let chartdataLinke = buildLinke(data);\n        setLinke(chartdataLinke);\n        let chartdataGruen = buildGruen(data);\n        setGruen(chartdataGruen);\n        /*for (let d in data) {\n          t.push(data[d]._id.hour);\n        }\n        setHour(t);*/\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: (cdu === null || cdu === void 0 ? void 0 : cdu.length) > 0 && (spd === null || spd === void 0 ? void 0 : spd.length) > 0 && (fdp === null || fdp === void 0 ? void 0 : fdp.length) > 0 && (afd === null || afd === void 0 ? void 0 : afd.length) > 0 && (linke === null || linke === void 0 ? void 0 : linke.length) > 0 && (gruen === null || gruen === void 0 ? void 0 : gruen.length) > 0 && /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [15, 16, 17, 18, 19, 20, 21, 22],\n        datasets: [{\n          label: \"CDU\",\n          data: cdu,\n          backgroundColor: \"rgba(255, 99, 132, 0.2)\"\n        }, {\n          label: \"SPD\",\n          data: spd,\n          backgroundColor: \"rgba(54, 162, 235, 0.2)\"\n        }, {\n          label: \"FDP\",\n          data: fdp,\n          backgroundColor: \"rgba(255, 206, 86, 0.2)\"\n        }, {\n          label: \"AFD\",\n          data: afd,\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\"\n        }, {\n          label: \"Linke\",\n          data: linke,\n          backgroundColor: \"rgba(153, 102, 255, 0.2)\"\n        }]\n      } //options={options}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Charts, \"TS0gS10tGzxgro+WWcTC9v/Xx5w=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/src/Charts.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","axios","buildSPD","data","spd","d","_id","party","spdnew","x","hour","y","count","push","buildFDP","fdp","fdpnew","buildAFD","afd","afdnew","buildLinke","linke","linkenew","buildGruen","gruen","gruennew","buildCDU","cdu","cdunew","t","Charts","setCDU","setSPD","setFDP","setAFD","setLinke","setGruen","setHour","options","responsive","tooltips","mode","elements","line","fill","scales","xAxes","display","yAxes","fetchData","fetch","then","response","json","chartdataCDU","chartdataSPD","chartdataFDP","chartdataAFD","chartdataLinke","chartdataGruen","length","labels","datasets","label","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\n//const hour = [];\nfunction buildSPD(data) {\n  const spd = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"SPD\") {\n      let spdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      spd.push(spdnew);\n    }\n  }\n  return spd;\n}\nfunction buildFDP(data) {\n  const fdp = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"FDP\") {\n      let fdpnew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      fdp.push(fdpnew);\n    }\n  }\n  return fdp;\n}\nfunction buildAFD(data) {\n  const afd = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"AfD\") {\n      let afdnew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      afd.push(afdnew);\n    }\n  }\n  return afd;\n}\nfunction buildLinke(data) {\n  const linke = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"Linke\") {\n      let linkenew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      linke.push(linkenew);\n    }\n  }\n  return linke;\n}\nfunction buildGruen(data) {\n  const gruen = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"Gruen\") {\n      let gruennew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      gruen.push(gruennew);\n    }\n  }\n  return gruen;\n}\n\nfunction buildCDU(data) {\n  const cdu = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      cdu.push(cdunew);\n    }\n  }\n  return cdu;\n}\nconst t = [];\n\nfunction Charts() {\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n\n  const [cdu, setCDU] = useState({});\n  const [spd, setSPD] = useState({});\n  const [fdp, setFDP] = useState({});\n  const [afd, setAFD] = useState({});\n  const [linke, setLinke] = useState({});\n  const [gruen, setGruen] = useState({});\n\n  const [hour, setHour] = useState({});\n  const options = {\n    responsive: true,\n    tooltips: {\n      mode: \"label\",\n    },\n    elements: {\n      line: {\n        fill: false,\n      },\n    },\n    scales: {\n      xAxes: [\n        {\n          display: true,\n        },\n      ],\n      yAxes: [],\n    },\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/jsonProcessed\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          //console.log(data);\n          let chartdataCDU = buildCDU(data);\n          setCDU(chartdataCDU);\n          let chartdataSPD = buildSPD(data);\n          setSPD(chartdataSPD);\n          let chartdataFDP = buildFDP(data);\n          setFDP(chartdataFDP);\n          let chartdataAFD = buildAFD(data);\n          setAFD(chartdataAFD);\n          let chartdataLinke = buildLinke(data);\n          setLinke(chartdataLinke);\n          let chartdataGruen = buildGruen(data);\n          setGruen(chartdataGruen);\n\n          /*for (let d in data) {\n            t.push(data[d]._id.hour);\n          }\n          setHour(t);*/\n        });\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className=\"charts\">\n      {cdu?.length > 0 &&\n        spd?.length > 0 &&\n        fdp?.length > 0 &&\n        afd?.length > 0 &&\n        linke?.length > 0 &&\n        gruen?.length > 0 && (\n          <Bar\n            data={{\n              labels: [15, 16, 17, 18, 19, 20, 21, 22],\n              datasets: [\n                {\n                  label: \"CDU\",\n                  data: cdu,\n                  backgroundColor: \"rgba(255, 99, 132, 0.2)\",\n                },\n                {\n                  label: \"SPD\",\n                  data: spd,\n                  backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n                },\n                {\n                  label: \"FDP\",\n                  data: fdp,\n                  backgroundColor: \"rgba(255, 206, 86, 0.2)\",\n                },\n                {\n                  label: \"AFD\",\n                  data: afd,\n                  backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n                },\n                {\n                  label: \"Linke\",\n                  data: linke,\n                  backgroundColor: \"rgba(153, 102, 255, 0.2)\",\n                },\n              ],\n            }}\n            //options={options}\n          />\n        )}\n    </div>\n  );\n}\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}