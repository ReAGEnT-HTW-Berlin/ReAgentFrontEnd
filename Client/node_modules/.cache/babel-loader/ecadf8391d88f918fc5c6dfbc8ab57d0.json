{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hour = [];\nconst cdu = [];\nconst spd = [];\nconst fdp = [];\nconst afd = [];\nconst linke = [];\nconst gruen = [];\n\nfunction buildData(data) {\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      cdu.push(data[d]);\n    }\n\n    if (data[d]._id.party == \"SPD\") {\n      spd.push(data[d]);\n    }\n\n    if (data[d]._id.party == \"FDP\") {\n      fdp.push(data[d]);\n    }\n\n    if (data[d]._id.party == \"AfD\") {\n      afd.push(data[d]);\n    }\n\n    if (data[d]._id.party == \"Linke\") {\n      linke.push(data[d]);\n    }\n\n    if (data[d]._id.party == \"Grün\") {\n      gruen.push(data[d]);\n    }\n  }\n}\n\nfunction Charts() {\n  _s();\n\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n  //const hour = [];\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/jsonProcessed\").then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(data);\n      });\n    };\n\n    fetchData();\n  });\n  console.log(cdu);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [10, 15, 16, 17, 18, 19, 20, 21, 22],\n        datasets: [{\n          label: \"cdu\",\n          data: cdu,\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\", \"rgba(153, 102, 255, 0.2)\", \"rgba(255, 159, 64, 0.2)\"]\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Charts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/src/Charts.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","axios","hour","cdu","spd","fdp","afd","linke","gruen","buildData","data","d","_id","party","push","Charts","fetchData","fetch","then","response","json","console","log","labels","datasets","label","backgroundColor","maintainAspectRatio","scales","y","beginAtZero"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst hour = [];\nconst cdu = [];\nconst spd = [];\nconst fdp = [];\nconst afd = [];\nconst linke = [];\nconst gruen = [];\nfunction buildData(data) {\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      cdu.push(data[d]);\n    }\n    if (data[d]._id.party == \"SPD\") {\n      spd.push(data[d]);\n    }\n    if (data[d]._id.party == \"FDP\") {\n      fdp.push(data[d]);\n    }\n    if (data[d]._id.party == \"AfD\") {\n      afd.push(data[d]);\n    }\n    if (data[d]._id.party == \"Linke\") {\n      linke.push(data[d]);\n    }\n    if (data[d]._id.party == \"Grün\") {\n      gruen.push(data[d]);\n    }\n  }\n}\n\nfunction Charts() {\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n\n  //const hour = [];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/jsonProcessed\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n        });\n    };\n\n    fetchData();\n  });\n\n  console.log(cdu);\n  return (\n    <div className=\"charts\">\n      <Bar\n        data={{\n          labels: [10, 15, 16, 17, 18, 19, 20, 21, 22],\n          datasets: [\n            {\n              label: \"cdu\",\n              data: cdu,\n              backgroundColor: [\n                \"rgba(255, 99, 132, 0.2)\",\n                \"rgba(54, 162, 235, 0.2)\",\n                \"rgba(255, 206, 86, 0.2)\",\n                \"rgba(75, 192, 192, 0.2)\",\n                \"rgba(153, 102, 255, 0.2)\",\n                \"rgba(255, 159, 64, 0.2)\",\n              ],\n            },\n          ],\n        }}\n        options={{\n          maintainAspectRatio: false,\n          scales: {\n            y: {\n              beginAtZero: true,\n            },\n          },\n        }}\n      />\n    </div>\n  );\n}\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}