{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction buildSPD(data) {\n  const spd = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"SPD\") {\n      let spdnew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      spd.push(spdnew);\n    }\n  }\n\n  return spd;\n}\n\nfunction buildFDP(data) {\n  const fdp = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"FDP\") {\n      let fdpnew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      fdp.push(fdpnew);\n    }\n  }\n\n  return fdp;\n}\n\nfunction buildAFD(data) {\n  const afd = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"AfD\") {\n      let afdnew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      afd.push(afdnew);\n    }\n  }\n\n  return afd;\n}\n\nfunction buildLinke(data) {\n  const linke = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"Linke\") {\n      let linkenew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      linke.push(linkenew);\n    }\n  }\n\n  return linke;\n}\n\nfunction buildGruen(data) {\n  const gruen = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"B90\") {\n      let gruennew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      gruen.push(gruennew);\n    }\n  }\n\n  return gruen;\n}\n\nfunction buildCDU(data) {\n  const cdu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      cdu.push(cdunew);\n    }\n  }\n\n  return cdu;\n}\n\nfunction buildCSU(data) {\n  const csu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CSU\") {\n      let csunew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      csu.push(csunew);\n    }\n  }\n\n  return csu;\n}\n\nfunction buildParteilos(data) {\n  const parteilos = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"Parteilos\") {\n      let parteilosnew = {\n        x: data[d]._id.year,\n        y: data[d].count\n      };\n      parteilos.push(parteilosnew);\n    }\n  }\n\n  return parteilos;\n}\n\nconst options = {\n  legend: {\n    display: true\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{}],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction Charts() {\n  _s();\n\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAFD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/countTotalByYear\").then(response => {\n        return response.json();\n      }).then(data => {\n        //console.log(data);\n        let chartdataCDU = buildCDU(data);\n        setCDU(chartdataCDU);\n        let chartdataSPD = buildSPD(data);\n        setSPD(chartdataSPD);\n        let chartdataFDP = buildFDP(data);\n        setFDP(chartdataFDP);\n        let chartdataAFD = buildAFD(data);\n        setAFD(chartdataAFD);\n        let chartdataLinke = buildLinke(data);\n        setLinke(chartdataLinke);\n        let chartdataGruen = buildGruen(data);\n        setGruen(chartdataGruen);\n        let chartdataCSU = buildCSU(data);\n        setCSU(chartdataCSU);\n        let chartdataParteilos = buildParteilos(data);\n        setParteilos(chartdataParteilos);\n        console.log(chartdataSPD);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [2017, 2018, 2019, 2020],\n        datasets: [{\n          label: \"SPD\",\n          data: spd,\n          backgroundColor: \"rgba(255, 99, 132, 0.4)\"\n        }, {\n          label: \"CDU\",\n          data: cdu,\n          backgroundColor: \"rgba(54, 162, 235, 0.4)\"\n        }, {\n          label: \"FDP\",\n          data: fdp,\n          backgroundColor: \"rgba(255, 206, 86, 0.4)\"\n        }, {\n          label: \"AfD\",\n          data: afd,\n          backgroundColor: \"rgba(75, 192, 192, 0.4)\"\n        }, {\n          label: \"Linke\",\n          data: linke,\n          backgroundColor: \"rgba(153, 102, 255, 0.4)\"\n        }, {\n          label: \"Gr√ºn\",\n          data: gruen,\n          backgroundColor: \"rgba(255, 159, 64, 0.4)\"\n        }, {\n          label: \"CSU\",\n          data: csu,\n          backgroundColor: \"rgba(25, 255, 64, 0.4)\"\n        }, {\n          label: \"Parteilos\",\n          data: parteilos,\n          backgroundColor: \"rgba(200, 19, 224, 0.4)\"\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Charts, \"MUXthplA5lllOAgZlPPcACFrCYo=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/src/Charts.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","numeral","buildSPD","data","spd","d","_id","party","spdnew","x","year","y","count","push","buildFDP","fdp","fdpnew","buildAFD","afd","afdnew","buildLinke","linke","linkenew","buildGruen","gruen","gruennew","buildCDU","cdu","cdunew","buildCSU","csu","csunew","buildParteilos","parteilos","parteilosnew","options","legend","display","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","format","scales","xAxes","yAxes","gridLines","ticks","callback","index","values","Charts","setCDU","setSPD","setFDP","setAFD","setLinke","setGruen","setCSU","setParteilos","fetchData","fetch","then","response","json","chartdataCDU","chartdataSPD","chartdataFDP","chartdataAFD","chartdataLinke","chartdataGruen","chartdataCSU","chartdataParteilos","console","log","labels","datasets","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nfunction buildSPD(data) {\n  const spd = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"SPD\") {\n      let spdnew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      spd.push(spdnew);\n    }\n  }\n  return spd;\n}\nfunction buildFDP(data) {\n  const fdp = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"FDP\") {\n      let fdpnew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      fdp.push(fdpnew);\n    }\n  }\n  return fdp;\n}\nfunction buildAFD(data) {\n  const afd = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"AfD\") {\n      let afdnew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      afd.push(afdnew);\n    }\n  }\n  return afd;\n}\nfunction buildLinke(data) {\n  const linke = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"Linke\") {\n      let linkenew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      linke.push(linkenew);\n    }\n  }\n  return linke;\n}\nfunction buildGruen(data) {\n  const gruen = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"B90\") {\n      let gruennew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      gruen.push(gruennew);\n    }\n  }\n  return gruen;\n}\n\nfunction buildCDU(data) {\n  const cdu = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      cdu.push(cdunew);\n    }\n  }\n  return cdu;\n}\nfunction buildCSU(data) {\n  const csu = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"CSU\") {\n      let csunew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      csu.push(csunew);\n    }\n  }\n  return csu;\n}\nfunction buildParteilos(data) {\n  const parteilos = [];\n  for (let d in data) {\n    if (data[d]._id.party == \"Parteilos\") {\n      let parteilosnew = {\n        x: data[d]._id.year,\n        y: data[d].count,\n      };\n      parteilos.push(parteilosnew);\n    }\n  }\n  return parteilos;\n}\n\nconst options = {\n  legend: {\n    display: true,\n  },\n\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [{}],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction Charts() {\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAFD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/countTotalByYear\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          //console.log(data);\n          let chartdataCDU = buildCDU(data);\n          setCDU(chartdataCDU);\n          let chartdataSPD = buildSPD(data);\n          setSPD(chartdataSPD);\n          let chartdataFDP = buildFDP(data);\n          setFDP(chartdataFDP);\n          let chartdataAFD = buildAFD(data);\n          setAFD(chartdataAFD);\n          let chartdataLinke = buildLinke(data);\n          setLinke(chartdataLinke);\n          let chartdataGruen = buildGruen(data);\n          setGruen(chartdataGruen);\n          let chartdataCSU = buildCSU(data);\n          setCSU(chartdataCSU);\n          let chartdataParteilos = buildParteilos(data);\n          setParteilos(chartdataParteilos);\n\n          console.log(chartdataSPD);\n        });\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className=\"charts\">\n      {\n        <Bar\n          data={{\n            labels: [2017, 2018, 2019, 2020],\n            datasets: [\n              {\n                label: \"SPD\",\n                data: spd,\n                backgroundColor: \"rgba(255, 99, 132, 0.4)\",\n              },\n              {\n                label: \"CDU\",\n                data: cdu,\n                backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n              },\n              {\n                label: \"FDP\",\n                data: fdp,\n                backgroundColor: \"rgba(255, 206, 86, 0.4)\",\n              },\n              {\n                label: \"AfD\",\n                data: afd,\n                backgroundColor: \"rgba(75, 192, 192, 0.4)\",\n              },\n              {\n                label: \"Linke\",\n                data: linke,\n                backgroundColor: \"rgba(153, 102, 255, 0.4)\",\n              },\n              {\n                label: \"Gr√ºn\",\n                data: gruen,\n                backgroundColor: \"rgba(255, 159, 64, 0.4)\",\n              },\n              {\n                label: \"CSU\",\n                data: csu,\n                backgroundColor: \"rgba(25, 255, 64, 0.4)\",\n              },\n              {\n                label: \"Parteilos\",\n                data: parteilos,\n                backgroundColor: \"rgba(200, 19, 224, 0.4)\",\n              },\n            ],\n          }}\n          options={options}\n        />\n      }\n    </div>\n  );\n}\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}