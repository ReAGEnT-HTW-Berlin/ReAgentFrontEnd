{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/cdu_graphs/MostTweetsDay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport ReactWordcloud from \"react-wordcloud\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  title: {\n    display: true,\n    text: \"Most tweets day\"\n  },\n  legend: {\n    display: false\n  }\n};\n\nfunction MostTweetsDay() {\n  _s();\n\n  const [vals, setVals] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/mosttweetsday/CDU\").then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(\"----------\");\n        console.log(data[4][2021][1]);\n        console.log(\"----------\");\n        var keys = [];\n        var vals = [];\n\n        for (let i = 1; i < 8; i++) {\n          for (var key in data[4][2021][i]) {\n            console.log(\"Key: \" + key);\n            console.log(\"Value: \" + data[4][2021][i][key]);\n            keys.push(key);\n            vals.push(data[4][2021][i][key]);\n          }\n        }\n\n        setVals(vals);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [\"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"],\n        datasets: [{\n          data: vals,\n          backgroundColor: \"rgba(54, 162, 235, 0.2)\"\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MostTweetsDay, \"WTO4xth8eHqIHuS605qnxrZGz4o=\");\n\n_c = MostTweetsDay;\nexport default MostTweetsDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"MostTweetsDay\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/cdu_graphs/MostTweetsDay.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","ReactWordcloud","options","title","display","text","legend","MostTweetsDay","vals","setVals","fetchData","fetch","then","response","json","data","console","log","keys","i","key","push","labels","datasets","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,IADJ;AAELC,IAAAA,IAAI,EAAE;AAFD,GADO;AAKdC,EAAAA,MAAM,EAAE;AACNF,IAAAA,OAAO,EAAE;AADH;AALM,CAAhB;;AAUA,SAASG,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,CAAC,yDAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHG,EAIHF,IAJG,CAIGG,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAR,EAAc,CAAd,CAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,YAAIC,IAAI,GAAG,EAAX;AACA,YAAIV,IAAI,GAAG,EAAX;;AAEA,aAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,eAAK,IAAIC,GAAT,IAAgBL,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAR,EAAcI,CAAd,CAAhB,EAAkC;AAChCH,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAUG,GAAtB;AACAJ,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAR,EAAcI,CAAd,EAAiBC,GAAjB,CAAxB;AACAF,YAAAA,IAAI,CAACG,IAAL,CAAUD,GAAV;AACAZ,YAAAA,IAAI,CAACa,IAAL,CAAUN,IAAI,CAAC,CAAD,CAAJ,CAAQ,IAAR,EAAcI,CAAd,EAAiBC,GAAjB,CAAV;AACD;AACF;;AAEDX,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAtBG,CAAN;AAuBD,KAxBD;;AAyBAE,IAAAA,SAAS;AACV,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BAEI,QAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJY,QAAAA,MAAM,EAAE,CACN,QADM,EAEN,UAFM,EAGN,UAHM,EAIN,YAJM,EAKN,SALM,EAMN,SANM,EAON,SAPM,CADJ;AAUJC,QAAAA,QAAQ,EAAE,CACR;AACER,UAAAA,IAAI,EAAEP,IADR;AAEEgB,UAAAA,eAAe,EAAE;AAFnB,SADQ;AAVN,OADR;AAkBE,MAAA,OAAO,EAAEtB;AAlBX;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA1DQK,a;;KAAAA,a;AA4DT,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport ReactWordcloud from \"react-wordcloud\";\n\nconst options = {\n  title: {\n    display: true,\n    text: \"Most tweets day\",\n  },\n  legend: {\n    display: false,\n  },\n};\n\nfunction MostTweetsDay() {\n  const [vals, setVals] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/mosttweetsday/CDU\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(\"----------\");\n          console.log(data[4][2021][1]);\n          console.log(\"----------\");\n\n          var keys = [];\n          var vals = [];\n\n          for (let i = 1; i < 8; i++) {\n            for (var key in data[4][2021][i]) {\n              console.log(\"Key: \" + key);\n              console.log(\"Value: \" + data[4][2021][i][key]);\n              keys.push(key);\n              vals.push(data[4][2021][i][key]);\n            }\n          }\n\n          setVals(vals);\n        });\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"charts\">\n      {\n        <Bar\n          data={{\n            labels: [\n              \"Montag\",\n              \"Dienstag\",\n              \"Mittwoch\",\n              \"Donnerstag\",\n              \"Freitag\",\n              \"Samstag\",\n              \"Sonntag\",\n            ],\n            datasets: [\n              {\n                data: vals,\n                backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n              },\n            ],\n          }}\n          options={options}\n        />\n      }\n    </div>\n  );\n}\n\nexport default MostTweetsDay;\n"]},"metadata":{},"sourceType":"module"}