{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/Tweets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TweetEmbed from \"react-tweet-embed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tweets({\n  party\n}) {\n  _s();\n\n  //const [id, setID] = useState(0);\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAFD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n  var cduData = [];\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"\").then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(data);\n\n        for (let d in data) {\n          if (data[d].party == \"cdu\") {\n            cduData.push(data[d].id);\n          }\n        }\n\n        setCDU(cduData);\n      });\n    };\n\n    fetchData();\n  }, [party]);\n\n  if (party == \"cdu\") {\n    return (\n      /*#__PURE__*/\n      // map through cdu and create tweets for each if\n      _jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TweetEmbed, {\n          id: cdu\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TweetEmbed, {\n      id: \"1391326610691956736\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TweetEmbed, {\n      id: \"1391326642056962049\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TweetEmbed, {\n      id: \"1391326634452606976\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tweets, \"MUXthplA5lllOAgZlPPcACFrCYo=\");\n\n_c = Tweets;\nexport default Tweets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/Tweets.js"],"names":["React","useState","useEffect","TweetEmbed","Tweets","party","cdu","setCDU","spd","setSPD","fdp","setFDP","afd","setAFD","linke","setLinke","gruen","setGruen","csu","setCSU","parteilos","setParteilos","cduData","fetchData","fetch","then","response","json","data","console","log","d","push","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA2B;AAAA;;AACzB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACiB,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,CAAD,CAA1C;AACA,MAAIqB,OAAO,GAAG,EAAd;AACApB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,CAAC,EAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHG,EAIHF,IAJG,CAIGG,IAAD,IAAU;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,aAAK,IAAIG,CAAT,IAAcH,IAAd,EAAoB;AAClB,cAAIA,IAAI,CAACG,CAAD,CAAJ,CAAQ1B,KAAR,IAAiB,KAArB,EAA4B;AAC1BiB,YAAAA,OAAO,CAACU,IAAR,CAAaJ,IAAI,CAACG,CAAD,CAAJ,CAAQE,EAArB;AACD;AACF;;AACD1B,QAAAA,MAAM,CAACe,OAAD,CAAN;AACD,OAZG,CAAN;AAaD,KAdD;;AAeAC,IAAAA,SAAS;AACV,GAjBQ,EAiBN,CAAClB,KAAD,CAjBM,CAAT;;AAmBA,MAAIA,KAAK,IAAI,KAAb,EAAoB;AAClB;AAAA;AACE;AACA;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAEC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAMD;;AACD,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7CQF,M;;KAAAA,M;AA8CT,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TweetEmbed from \"react-tweet-embed\";\n\nfunction Tweets({ party }) {\n  //const [id, setID] = useState(0);\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAFD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n  var cduData = [];\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n          for (let d in data) {\n            if (data[d].party == \"cdu\") {\n              cduData.push(data[d].id);\n            }\n          }\n          setCDU(cduData);\n        });\n    };\n    fetchData();\n  }, [party]);\n\n  if (party == \"cdu\") {\n    return (\n      // map through cdu and create tweets for each if\n      <div>\n        <TweetEmbed id={cdu} />\n      </div>\n    );\n  }\n  return (\n    <div>\n      <TweetEmbed id=\"1391326610691956736\" />\n      <TweetEmbed id=\"1391326642056962049\" />\n      <TweetEmbed id=\"1391326634452606976\" />\n    </div>\n  );\n}\nexport default Tweets;\n"]},"metadata":{},"sourceType":"module"}