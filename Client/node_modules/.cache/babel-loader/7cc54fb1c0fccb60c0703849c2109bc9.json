{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/individual_graphs/AverageTweetLength_individual.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  title: {\n    display: true,\n    text: \"Average Tweet Length\"\n  },\n  legend: {\n    display: false\n  }\n};\n\nfunction AverageTweetLength_individual() {\n  _s();\n\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/averagelikestweet\").then(response => {\n        return response.json();\n      }).then(data => {\n        if (party == \"cdu\") {\n          setD(data[2].CDU);\n        } else if (party == \"spd\") {\n          setD(data[7].SPD);\n        } else if (party == \"linke\") {\n          setD(data[5].Linke);\n        } else if (party == \"fdp\") {\n          setD(data[4].FDP);\n        } else if (party == \"afd\") {\n          setD(data[0].AfD);\n        } else if (party == \"gruen\") {\n          setD(data[1].B90);\n        } else if (party == \"csu\") {\n          setD(data[3].CSU);\n        } else if (party == \"parteilos\") {\n          setD(data[6].Parteilos);\n        }\n      });\n    };\n\n    fetchData();\n  }, [party]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        labels: [2017, 2018, 2019, 2020, 2021],\n        datasets: [{\n          fill: false,\n          data: [d[2017], d[2018], d[2019], d[2020], d[2021]],\n          backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n          borderColor: \"rgba(54, 162, 235)\"\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AverageTweetLength_individual, \"fIWOXihKK9OHrCHvEmE4d323QB0=\");\n\n_c = AverageTweetLength_individual;\nexport default AverageTweetLength_individual;\n\nvar _c;\n\n$RefreshReg$(_c, \"AverageTweetLength_individual\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/individual_graphs/AverageTweetLength_individual.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","options","title","display","text","legend","AverageTweetLength_individual","d","setD","fetchData","fetch","then","response","json","data","party","CDU","SPD","Linke","FDP","AfD","B90","CSU","Parteilos","labels","datasets","fill","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nconst options = {\n  title: {\n    display: true,\n    text: \"Average Tweet Length\",\n  },\n  legend: {\n    display: false,\n  },\n};\nfunction AverageTweetLength_individual() {\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/averagelikestweet\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          if (party == \"cdu\") {\n            setD(data[2].CDU);\n          } else if (party == \"spd\") {\n            setD(data[7].SPD);\n          } else if (party == \"linke\") {\n            setD(data[5].Linke);\n          } else if (party == \"fdp\") {\n            setD(data[4].FDP);\n          } else if (party == \"afd\") {\n            setD(data[0].AfD);\n          } else if (party == \"gruen\") {\n            setD(data[1].B90);\n          } else if (party == \"csu\") {\n            setD(data[3].CSU);\n          } else if (party == \"parteilos\") {\n            setD(data[6].Parteilos);\n          }\n        });\n    };\n    fetchData();\n  }, [party]);\n  return (\n    <div className=\"charts\">\n      {\n        <Line\n          data={{\n            labels: [2017, 2018, 2019, 2020, 2021],\n            datasets: [\n              {\n                fill: false,\n                data: [d[2017], d[2018], d[2019], d[2020], d[2021]],\n                backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n                borderColor: \"rgba(54, 162, 235)\",\n              },\n            ],\n          }}\n          options={options}\n        />\n      }\n    </div>\n  );\n}\n\nexport default AverageTweetLength_individual;\n"]},"metadata":{},"sourceType":"module"}