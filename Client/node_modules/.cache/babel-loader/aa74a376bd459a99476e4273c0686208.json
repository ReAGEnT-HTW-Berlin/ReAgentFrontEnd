{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/individual_graphs/CountTotalByMonth_individual.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport { Card } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  title: {\n    display: true,\n    text: \"Total Tweets per Year\"\n  },\n  legend: {\n    display: false\n  }\n};\nvar parties = {\n  AfD: {\n    0: \"AfD\"\n  },\n  B90: {\n    1: \"B90\"\n  },\n  CDU: {\n    2: \"CDU\"\n  },\n  CSU: {\n    3: \"CSU\"\n  },\n  FDP: {\n    4: \"FDP\"\n  },\n  Linke: {\n    5: \"Linke\"\n  },\n  Parteilos: {\n    6: \"Parteilos\"\n  },\n  SPD: {\n    7: \"SPD\"\n  }\n};\n\nfunction CountTotalByMonth_induvidual({\n  party\n}) {\n  _s();\n\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/countTweetByMonth\").then(response => {\n        return response.json();\n      }).then(data => {\n        setD(data[Object.keys(party)][Object.values(party)[0]]);\n      });\n    };\n\n    fetchData();\n  }, [party]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: [2017, 2018, 2019, 2020, 2021],\n          datasets: [{\n            data: [d[2017], d[2018], d[2019], d[2020], d[2021]],\n            backgroundColor: \"rgba(54, 162, 235, 0.4)\"\n          }]\n        },\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountTotalByMonth_induvidual, \"fIWOXihKK9OHrCHvEmE4d323QB0=\");\n\n_c = CountTotalByMonth_induvidual;\nexport default CountTotalByMonth_induvidual;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountTotalByMonth_induvidual\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/individual_graphs/CountTotalByMonth_individual.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","Card","options","title","display","text","legend","parties","AfD","B90","CDU","CSU","FDP","Linke","Parteilos","SPD","CountTotalByMonth_induvidual","party","d","setD","fetchData","fetch","then","response","json","data","Object","keys","values","labels","datasets","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,SAASC,IAAT,QAAqB,mBAArB;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,IADJ;AAELC,IAAAA,IAAI,EAAE;AAFD,GADO;AAKdC,EAAAA,MAAM,EAAE;AACNF,IAAAA,OAAO,EAAE;AADH;AALM,CAAhB;AASA,IAAIG,OAAO,GAAG;AACZC,EAAAA,GAAG,EAAE;AAAE,OAAG;AAAL,GADO;AAEZC,EAAAA,GAAG,EAAE;AAAE,OAAG;AAAL,GAFO;AAGZC,EAAAA,GAAG,EAAE;AAAE,OAAG;AAAL,GAHO;AAIZC,EAAAA,GAAG,EAAE;AAAE,OAAG;AAAL,GAJO;AAKZC,EAAAA,GAAG,EAAE;AAAE,OAAG;AAAL,GALO;AAMZC,EAAAA,KAAK,EAAE;AAAE,OAAG;AAAL,GANK;AAOZC,EAAAA,SAAS,EAAE;AAAE,OAAG;AAAL,GAPC;AAQZC,EAAAA,GAAG,EAAE;AAAE,OAAG;AAAL;AARO,CAAd;;AAUA,SAASC,4BAAT,CAAsC;AAAEC,EAAAA;AAAF,CAAtC,EAAiD;AAAA;;AAC/C,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYvB,QAAQ,CAAC,CAAD,CAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,CAAC,yDAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHG,EAIHF,IAJG,CAIGG,IAAD,IAAU;AACdN,QAAAA,IAAI,CAACM,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYV,KAAZ,CAAD,CAAJ,CAAyBS,MAAM,CAACE,MAAP,CAAcX,KAAd,EAAqB,CAArB,CAAzB,CAAD,CAAJ;AACD,OANG,CAAN;AAOD,KARD;;AASAG,IAAAA,SAAS;AACV,GAXQ,EAWN,CAACH,KAAD,CAXM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BAEI,QAAC,IAAD;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAE;AACJY,UAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CADJ;AAEJC,UAAAA,QAAQ,EAAE,CACR;AACEL,YAAAA,IAAI,EAAE,CAACP,CAAC,CAAC,IAAD,CAAF,EAAUA,CAAC,CAAC,IAAD,CAAX,EAAmBA,CAAC,CAAC,IAAD,CAApB,EAA4BA,CAAC,CAAC,IAAD,CAA7B,EAAqCA,CAAC,CAAC,IAAD,CAAtC,CADR;AAEEa,YAAAA,eAAe,EAAE;AAFnB,WADQ;AAFN,SADR;AAUE,QAAA,OAAO,EAAE7B;AAVX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlCQc,4B;;KAAAA,4B;AAoCT,eAAeA,4BAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport { Card } from \"@material-ui/core\";\nconst options = {\n  title: {\n    display: true,\n    text: \"Total Tweets per Year\",\n  },\n  legend: {\n    display: false,\n  },\n};\nvar parties = {\n  AfD: { 0: \"AfD\" },\n  B90: { 1: \"B90\" },\n  CDU: { 2: \"CDU\" },\n  CSU: { 3: \"CSU\" },\n  FDP: { 4: \"FDP\" },\n  Linke: { 5: \"Linke\" },\n  Parteilos: { 6: \"Parteilos\" },\n  SPD: { 7: \"SPD\" },\n};\nfunction CountTotalByMonth_induvidual({ party }) {\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/countTweetByMonth\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setD(data[Object.keys(party)][Object.values(party)[0]]);\n        });\n    };\n    fetchData();\n  }, [party]);\n  return (\n    <div className=\"charts\">\n      {\n        <Card>\n          <Bar\n            data={{\n              labels: [2017, 2018, 2019, 2020, 2021],\n              datasets: [\n                {\n                  data: [d[2017], d[2018], d[2019], d[2020], d[2021]],\n                  backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n                },\n              ],\n            }}\n            options={options}\n          />\n        </Card>\n      }\n    </div>\n  );\n}\n\nexport default CountTotalByMonth_induvidual;\n"]},"metadata":{},"sourceType":"module"}