{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/Tweets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport TweetEmbed from \"react-tweet-embed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction buildList(data) {\n  var list = [];\n  console.log(data);\n\n  for (var i in data) {\n    list.push(data[i]);\n  }\n\n  return list;\n}\n\nfunction Tweets({\n  party\n}) {\n  _s();\n\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      var p = Object.values(party);\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/liveTweets/\" + p).then(response => {\n        return response.json();\n      }).then(data => {\n        var newList = buildList(Object.values(data)[0]);\n        setD(newList);\n      });\n    };\n\n    fetchData();\n  }, [party]);\n  var c = [\"1409482034288992266\", \"1409482288463855616\"];\n  console.log(d);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: c.map(ids => /*#__PURE__*/_jsxDEV(TweetEmbed, {\n      id: ids\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tweets, \"fIWOXihKK9OHrCHvEmE4d323QB0=\");\n\n_c = Tweets;\nexport default Tweets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/Tweets.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","TweetEmbed","buildList","data","list","console","log","i","push","Tweets","party","d","setD","fetchData","p","Object","values","fetch","then","response","json","newList","c","map","ids"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,MAAIC,IAAI,GAAG,EAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,OAAK,IAAII,CAAT,IAAcJ,IAAd,EAAoB;AAClBC,IAAAA,IAAI,CAACI,IAAL,CAAUL,IAAI,CAACI,CAAD,CAAd;AACD;;AACD,SAAOH,IAAP;AACD;;AAED,SAASK,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA2B;AAAA;;AACzB,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYhB,QAAQ,CAAC,CAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,SAAS,GAAG,YAAY;AAC5B,UAAIC,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAR;AACA,YAAMO,KAAK,CAAC,sDAAsDH,CAAvD,CAAL,CACHI,IADG,CACGC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHG,EAIHF,IAJG,CAIGf,IAAD,IAAU;AACd,YAAIkB,OAAO,GAAGnB,SAAS,CAACa,MAAM,CAACC,MAAP,CAAcb,IAAd,EAAoB,CAApB,CAAD,CAAvB;AACAS,QAAAA,IAAI,CAACS,OAAD,CAAJ;AACD,OAPG,CAAN;AAQD,KAVD;;AAWAR,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACH,KAAD,CAbM,CAAT;AAeA,MAAIY,CAAC,GAAG,CAAC,qBAAD,EAAwB,qBAAxB,CAAR;AACAjB,EAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AAEA,sBACE;AAAA,cACGW,CAAC,CAACC,GAAF,CAAOC,GAAD,iBACL,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5BQf,M;;KAAAA,M;AA6BT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport TweetEmbed from \"react-tweet-embed\";\n\nfunction buildList(data) {\n  var list = [];\n  console.log(data);\n  for (var i in data) {\n    list.push(data[i]);\n  }\n  return list;\n}\n\nfunction Tweets({ party }) {\n  const [d, setD] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      var p = Object.values(party);\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/liveTweets/\" + p)\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          var newList = buildList(Object.values(data)[0]);\n          setD(newList);\n        });\n    };\n    fetchData();\n  }, [party]);\n\n  var c = [\"1409482034288992266\", \"1409482288463855616\"];\n  console.log(d);\n\n  return (\n    <div>\n      {c.map((ids) => (\n        <TweetEmbed id={ids} />\n      ))}\n    </div>\n  );\n}\nexport default Tweets;\n"]},"metadata":{},"sourceType":"module"}