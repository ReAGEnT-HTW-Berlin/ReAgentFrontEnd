{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/home_graphs/AverageReply.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport { Card } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  title: {\n    display: true,\n    text: \"Average Reply\"\n  },\n  legend: {\n    display: true\n  }\n};\n\nfunction AverageReply() {\n  _s();\n\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAfD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/averageReply\").then(response => {\n        return response.json();\n      }).then(data => {\n        setCDU(data[0].AfD);\n        setLinke(data[1].B90);\n        setFDP(data[2].CDU);\n        setAfD(data[3].CSU);\n        setGruen(data[4].FDP);\n        setSPD(data[5].Linke);\n        setCSU(data[6].Parteilos);\n        setParteilos(data[7].SPD);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"average\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        title: true,\n        data: {\n          labels: [2017, 2018, 2019, 2020, 2021],\n          datasets: [{\n            label: \"CDU\",\n            fill: false,\n            data: [cdu[2017], cdu[2018], cdu[2019], cdu[2020], cdu[2021]],\n            backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n            borderColor: \"rgba(54, 162, 235)\"\n          }, {\n            label: \"Linke\",\n            fill: false,\n            data: [linke[2017], linke[2018], linke[2019], linke[2020], linke[2021]],\n            backgroundColor: \"rgba(255, 206, 86, 0.4)\",\n            borderColor: \"rgba(255, 206, 86)\"\n          }, {\n            label: \"FDP\",\n            fill: false,\n            data: [fdp[2017], fdp[2018], fdp[2019], fdp[2020], fdp[2021]],\n            backgroundColor: \"rgba(55, 9, 232, 0.4)\",\n            borderColor: \"rgba(55, 9, 232)\"\n          }, {\n            label: \"AfD\",\n            fill: false,\n            data: [afd[2017], afd[2018], afd[2019], afd[2020], afd[2021]],\n            backgroundColor: \"rgba(75, 192, 192, 0.4)\",\n            borderColor: \"rgba(75, 192, 192)\"\n          }, {\n            label: \"GrÃ¼ne\",\n            fill: false,\n            data: [gruen[2017], gruen[2018], gruen[2019], gruen[2020], gruen[2021]],\n            backgroundColor: \"rgba(153, 102, 255, 0.4)\",\n            borderColor: \"rgba(153, 102, 255)\"\n          }, {\n            label: \"SPD\",\n            fill: false,\n            data: [spd[2017], spd[2018], spd[2019], spd[2020], spd[2021]],\n            backgroundColor: \"rgba(255, 159, 64, 0.4)\",\n            borderColor: \"rgba(255, 159, 64)\"\n          }, {\n            label: \"CSU\",\n            fill: false,\n            data: [csu[2017], csu[2018], csu[2019], csu[2020], csu[2021]],\n            backgroundColor: \"rgba(25, 255, 64, 0.4)\",\n            borderColor: \"rgba(25, 255, 64)\"\n          }, {\n            label: \"Parteilos\",\n            fill: false,\n            data: [parteilos[2017], parteilos[2018], parteilos[2019], parteilos[2020], parteilos[2021]],\n            backgroundColor: \"rgba(200, 19, 224, 0.4)\",\n            borderColor: \"rgba(200, 19, 224)\"\n          }]\n        },\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AverageReply, \"6bsOjSOAPREhm523vw/ARdhtLIg=\");\n\n_c = AverageReply;\nexport default AverageReply;\n\nvar _c;\n\n$RefreshReg$(_c, \"AverageReply\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/home_graphs/AverageReply.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","Card","options","title","display","text","legend","AverageReply","cdu","setCDU","spd","setSPD","fdp","setFDP","afd","setAfD","linke","setLinke","gruen","setGruen","csu","setCSU","parteilos","setParteilos","fetchData","fetch","then","response","json","data","AfD","B90","CDU","CSU","FDP","Linke","Parteilos","SPD","labels","datasets","label","fill","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport { Card } from \"@material-ui/core\";\n\nconst options = {\n  title: {\n    display: true,\n    text: \"Average Reply\",\n  },\n  legend: {\n    display: true,\n  },\n};\nfunction AverageReply() {\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAfD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/averageReply\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setCDU(data[0].AfD);\n          setLinke(data[1].B90);\n          setFDP(data[2].CDU);\n          setAfD(data[3].CSU);\n          setGruen(data[4].FDP);\n          setSPD(data[5].Linke);\n          setCSU(data[6].Parteilos);\n          setParteilos(data[7].SPD);\n        });\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"average\">\n      {\n        <Card>\n          <Line\n            title\n            data={{\n              labels: [2017, 2018, 2019, 2020, 2021],\n              datasets: [\n                {\n                  label: \"CDU\",\n                  fill: false,\n                  data: [cdu[2017], cdu[2018], cdu[2019], cdu[2020], cdu[2021]],\n                  backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n                  borderColor: \"rgba(54, 162, 235)\",\n                },\n                {\n                  label: \"Linke\",\n                  fill: false,\n                  data: [\n                    linke[2017],\n                    linke[2018],\n                    linke[2019],\n                    linke[2020],\n                    linke[2021],\n                  ],\n                  backgroundColor: \"rgba(255, 206, 86, 0.4)\",\n                  borderColor: \"rgba(255, 206, 86)\",\n                },\n                {\n                  label: \"FDP\",\n                  fill: false,\n                  data: [fdp[2017], fdp[2018], fdp[2019], fdp[2020], fdp[2021]],\n                  backgroundColor: \"rgba(55, 9, 232, 0.4)\",\n                  borderColor: \"rgba(55, 9, 232)\",\n                },\n                {\n                  label: \"AfD\",\n                  fill: false,\n                  data: [afd[2017], afd[2018], afd[2019], afd[2020], afd[2021]],\n                  backgroundColor: \"rgba(75, 192, 192, 0.4)\",\n                  borderColor: \"rgba(75, 192, 192)\",\n                },\n                {\n                  label: \"GrÃ¼ne\",\n                  fill: false,\n                  data: [\n                    gruen[2017],\n                    gruen[2018],\n                    gruen[2019],\n                    gruen[2020],\n                    gruen[2021],\n                  ],\n                  backgroundColor: \"rgba(153, 102, 255, 0.4)\",\n                  borderColor: \"rgba(153, 102, 255)\",\n                },\n                {\n                  label: \"SPD\",\n                  fill: false,\n                  data: [spd[2017], spd[2018], spd[2019], spd[2020], spd[2021]],\n                  backgroundColor: \"rgba(255, 159, 64, 0.4)\",\n                  borderColor: \"rgba(255, 159, 64)\",\n                },\n                {\n                  label: \"CSU\",\n                  fill: false,\n                  data: [csu[2017], csu[2018], csu[2019], csu[2020], csu[2021]],\n                  backgroundColor: \"rgba(25, 255, 64, 0.4)\",\n                  borderColor: \"rgba(25, 255, 64)\",\n                },\n                {\n                  label: \"Parteilos\",\n                  fill: false,\n                  data: [\n                    parteilos[2017],\n                    parteilos[2018],\n                    parteilos[2019],\n                    parteilos[2020],\n                    parteilos[2021],\n                  ],\n                  backgroundColor: \"rgba(200, 19, 224, 0.4)\",\n                  borderColor: \"rgba(200, 19, 224)\",\n                },\n              ],\n            }}\n            options={options}\n          />\n        </Card>\n      }\n    </div>\n  );\n}\n\nexport default AverageReply;\n"]},"metadata":{},"sourceType":"module"}