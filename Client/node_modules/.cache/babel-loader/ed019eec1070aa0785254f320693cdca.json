{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/CountTotalByYear.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountTotalByYear() {\n  _s();\n\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAfD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/countTweetByMonth\").then(response => {\n        return response.json();\n      }).then(data => {\n        setCDU(data[0].CDU);\n        setLinke(data[1].Linke);\n        setFDP(data[2].FDP);\n        setAfD(data[3].AfD);\n        setGruen(data[4].B90);\n        setSPD(data[5].SPD);\n        setCSU(data[6].CSU);\n        setParteilos(data[7].Parteilos);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [2017, 2018, 2019, 2020, 2021],\n        datasets: [{\n          label: \"CDU\",\n          data: [cdu[2017], cdu[2018], cdu[2019], cdu[2020], cdu[2021]],\n          backgroundColor: \"rgba(54, 162, 235, 0.4)\"\n        }, {\n          label: \"Linke\",\n          data: [linke[2017], linke[2018], linke[2019], linke[2020], linke[2021]],\n          backgroundColor: \"rgba(255, 206, 86, 0.4)\"\n        }, {\n          label: \"FDP\",\n          data: [fdp[2017], fdp[2018], fdp[2019], fdp[2020], fdp[2021]],\n          backgroundColor: \"rgba(55, 9, 232, 0.4)\"\n        }, {\n          label: \"AfD\",\n          data: [afd[2017], afd[2018], afd[2019], afd[2020], afd[2021]],\n          backgroundColor: \"rgba(75, 192, 192, 0.4)\"\n        }, {\n          label: \"Grün\",\n          data: [gruen[2017], gruen[2018], gruen[2019], gruen[2020], gruen[2021]],\n          backgroundColor: \"rgba(153, 102, 255, 0.4)\"\n        }, {\n          label: \"SPd\",\n          data: [spd[2017], spd[2018], spd[2019], spd[2020], spd[2021]],\n          backgroundColor: \"rgba(255, 159, 64, 0.4)\"\n        }, {\n          label: \"CSU\",\n          data: [csu[2017], csu[2018], csu[2019], csu[2020], csu[2021]],\n          backgroundColor: \"rgba(25, 255, 64, 0.4)\"\n        }, {\n          label: \"Parteilos\",\n          data: [parteilos[2017], parteilos[2018], parteilos[2019], parteilos[2020], parteilos[2021]],\n          backgroundColor: \"rgba(200, 19, 224, 0.4)\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountTotalByYear, \"CH2QnOvuul4eUGz83NaVyJ7Rhmc=\");\n\n_c = CountTotalByYear;\nexport default CountTotalByYear;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountTotalByYear\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/CountTotalByYear.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","numeral","CountTotalByYear","cdu","setCDU","spd","setSPD","fdp","setFDP","afd","setAfD","linke","setLinke","gruen","setGruen","csu","setCSU","parteilos","setParteilos","d","setD","fetchData","fetch","then","response","json","data","CDU","Linke","FDP","AfD","B90","SPD","CSU","Parteilos","labels","datasets","label","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nfunction CountTotalByYear() {\n  const [cdu, setCDU] = useState(0);\n  const [spd, setSPD] = useState(0);\n  const [fdp, setFDP] = useState(0);\n  const [afd, setAfD] = useState(0);\n  const [linke, setLinke] = useState(0);\n  const [gruen, setGruen] = useState(0);\n  const [csu, setCSU] = useState(0);\n  const [parteilos, setParteilos] = useState(0);\n\n  const [d, setD] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/countTweetByMonth\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setCDU(data[0].CDU);\n          setLinke(data[1].Linke);\n          setFDP(data[2].FDP);\n          setAfD(data[3].AfD);\n          setGruen(data[4].B90);\n          setSPD(data[5].SPD);\n          setCSU(data[6].CSU);\n          setParteilos(data[7].Parteilos);\n        });\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className=\"charts\">\n      {\n        <Bar\n          data={{\n            labels: [2017, 2018, 2019, 2020, 2021],\n            datasets: [\n              {\n                label: \"CDU\",\n                data: [cdu[2017], cdu[2018], cdu[2019], cdu[2020], cdu[2021]],\n                backgroundColor: \"rgba(54, 162, 235, 0.4)\",\n              },\n              {\n                label: \"Linke\",\n                data: [\n                  linke[2017],\n                  linke[2018],\n                  linke[2019],\n                  linke[2020],\n                  linke[2021],\n                ],\n                backgroundColor: \"rgba(255, 206, 86, 0.4)\",\n              },\n              {\n                label: \"FDP\",\n                data: [fdp[2017], fdp[2018], fdp[2019], fdp[2020], fdp[2021]],\n                backgroundColor: \"rgba(55, 9, 232, 0.4)\",\n              },\n              {\n                label: \"AfD\",\n                data: [afd[2017], afd[2018], afd[2019], afd[2020], afd[2021]],\n                backgroundColor: \"rgba(75, 192, 192, 0.4)\",\n              },\n              {\n                label: \"Grün\",\n                data: [\n                  gruen[2017],\n                  gruen[2018],\n                  gruen[2019],\n                  gruen[2020],\n                  gruen[2021],\n                ],\n                backgroundColor: \"rgba(153, 102, 255, 0.4)\",\n              },\n              {\n                label: \"SPd\",\n                data: [spd[2017], spd[2018], spd[2019], spd[2020], spd[2021]],\n                backgroundColor: \"rgba(255, 159, 64, 0.4)\",\n              },\n              {\n                label: \"CSU\",\n                data: [csu[2017], csu[2018], csu[2019], csu[2020], csu[2021]],\n                backgroundColor: \"rgba(25, 255, 64, 0.4)\",\n              },\n              {\n                label: \"Parteilos\",\n                data: [\n                  parteilos[2017],\n                  parteilos[2018],\n                  parteilos[2019],\n                  parteilos[2020],\n                  parteilos[2021],\n                ],\n                backgroundColor: \"rgba(200, 19, 224, 0.4)\",\n              },\n            ],\n          }}\n        />\n      }\n    </div>\n  );\n}\nexport default CountTotalByYear;\n"]},"metadata":{},"sourceType":"module"}