{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/Client/src/Tweets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport TweetEmbed from \"react-tweet-embed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tweets({\n  party\n}) {\n  _s();\n\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://reagent1.f4.htw-berlin.de:8080/liveTweets/\" + party.values).then(response => {\n        return response.json();\n      }).then(data => {\n        setD(data[Object.keys(party)][Object.values(party)[0]]);\n        console.log(d);\n      });\n    };\n\n    fetchData();\n  }, [party]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TweetEmbed, {\n      id: d[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tweets, \"fIWOXihKK9OHrCHvEmE4d323QB0=\");\n\n_c = Tweets;\nexport default Tweets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/Client/src/Tweets.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","TweetEmbed","Tweets","party","d","setD","fetchData","fetch","values","then","response","json","data","Object","keys","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA2B;AAAA;;AACzB,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYT,QAAQ,CAAC,CAAD,CAA1B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,CACT,sDAAsDJ,KAAK,CAACK,MADnD,CAAL,CAGHC,IAHG,CAGGC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OALG,EAMHF,IANG,CAMGG,IAAD,IAAU;AACdP,QAAAA,IAAI,CAACO,IAAI,CAACC,MAAM,CAACC,IAAP,CAAYX,KAAZ,CAAD,CAAJ,CAAyBU,MAAM,CAACL,MAAP,CAAcL,KAAd,EAAqB,CAArB,CAAzB,CAAD,CAAJ;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAZ;AACD,OATG,CAAN;AAUD,KAXD;;AAYAE,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACH,KAAD,CAdM,CAAT;AAgBA,sBACE;AAAA,2BAIE,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEC,CAAC,CAAC,CAAD;AAAjB;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA1BQF,M;;KAAAA,M;AA2BT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport TweetEmbed from \"react-tweet-embed\";\n\nfunction Tweets({ party }) {\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\n        \"http://reagent1.f4.htw-berlin.de:8080/liveTweets/\" + party.values\n      )\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          setD(data[Object.keys(party)][Object.values(party)[0]]);\n          console.log(d);\n        });\n    };\n    fetchData();\n  }, [party]);\n\n  return (\n    <div>\n      {/*{this.d.map((id, index) => (\n        <TweetEmbed id={id} />\n      ))}*/}\n      <TweetEmbed id={d[0]} />\n    </div>\n  );\n}\nexport default Tweets;\n"]},"metadata":{},"sourceType":"module"}