{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/src/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\"; //const hour = [];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spd = [];\nconst fdp = [];\nconst afd = [];\nconst linke = [];\nconst gruen = [];\n\nfunction buildData(data) {\n  const cdu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count\n      };\n      cdu.push(cdunew);\n    }\n    /*if (data[d]._id.party == \"SPD\") {\n      spd.push(data[d]);\n    }\n    if (data[d]._id.party == \"FDP\") {\n      fdp.push(data[d]);\n    }\n    if (data[d]._id.party == \"AfD\") {\n      afd.push(data[d]);\n    }\n    if (data[d]._id.party == \"Linke\") {\n      linke.push(data[d]);\n    }\n    if (data[d]._id.party == \"Grün\") {\n      gruen.push(data[d]);\n    }*/\n\n  }\n\n  return cdu;\n}\n\nconst t = [];\n\nfunction Charts() {\n  _s();\n\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n  const [cduu, setCDUU] = useState({});\n  const [hour, setHour] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/jsonProcessed\").then(response => {\n        return response.json();\n      }).then(data => {\n        //console.log(data);\n        let chartdata = buildData(data);\n        setCDUU(chartdata);\n        console.log(chartdata);\n\n        for (let d in data) {\n          t.push(data[d]._id.hour);\n        }\n\n        setHour(t); //t.push(chartdata);\n      });\n    };\n\n    fetchData();\n  }, []);\n  console.log(cduu);\n  /*axios.get(\"http://localhost:8080/jsonProcessed\").then((res) => {\n    //console.log(res.data);\n    for (let d in res.data) {\n      if (res.data[d]._id.party == \"CDU\") {\n        let cdunew = {\n          x: res.data[d]._id.hour,\n          y: res.data[d].count,\n        };\n        t.push(cdunew);\n      }\n    }\n  });\n  console.log(t);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: (cduu === null || cduu === void 0 ? void 0 : cduu.length) > 0 && /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: hour,\n        datasets: [{\n          label: \"cdu\",\n          data: cduu\n        }]\n      } //options={options}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Charts, \"Gy73CGVtkstBw3YDJUeNEIGMdr0=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/src/Charts.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","axios","spd","fdp","afd","linke","gruen","buildData","data","cdu","d","_id","party","cdunew","x","hour","y","count","push","t","Charts","cduu","setCDUU","setHour","fetchData","fetch","then","response","json","chartdata","console","log","length","labels","datasets","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,KAAK,GAAG,EAAd;;AAEA,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,QAAMC,GAAG,GAAG,EAAZ;;AAEA,OAAK,IAAIC,CAAT,IAAcF,IAAd,EAAoB;AAClB,QAAIA,IAAI,CAACE,CAAD,CAAJ,CAAQC,GAAR,CAAYC,KAAZ,IAAqB,KAAzB,EAAgC;AAC9B,UAAIC,MAAM,GAAG;AACXC,QAAAA,CAAC,EAAEN,IAAI,CAACE,CAAD,CAAJ,CAAQC,GAAR,CAAYI,IADJ;AAEXC,QAAAA,CAAC,EAAER,IAAI,CAACE,CAAD,CAAJ,CAAQO;AAFA,OAAb;AAIAR,MAAAA,GAAG,CAACS,IAAJ,CAASL,MAAT;AACD;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACG;;AACD,SAAOJ,GAAP;AACD;;AACD,MAAMU,CAAC,GAAG,EAAV;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB;AACF;AACA;AAEE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,IAAD,EAAOQ,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM6B,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,CAAC,qCAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHG,EAIHF,IAJG,CAIGlB,IAAD,IAAU;AACd;AACA,YAAIqB,SAAS,GAAGtB,SAAS,CAACC,IAAD,CAAzB;AACAc,QAAAA,OAAO,CAACO,SAAD,CAAP;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;;AAEA,aAAK,IAAInB,CAAT,IAAcF,IAAd,EAAoB;AAClBW,UAAAA,CAAC,CAACD,IAAF,CAAOV,IAAI,CAACE,CAAD,CAAJ,CAAQC,GAAR,CAAYI,IAAnB;AACD;;AACDQ,QAAAA,OAAO,CAACJ,CAAD,CAAP,CATc,CAUd;AACD,OAfG,CAAN;AAgBD,KAjBD;;AAkBAK,IAAAA,SAAS;AACV,GApBQ,EAoBN,EApBM,CAAT;AAsBAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACG,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEW,MAAN,IAAe,CAAf,iBACC,QAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAElB,IADJ;AAEJmB,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,KADT;AAEE3B,UAAAA,IAAI,EAAEa;AAFR,SADQ;AAFN,OADR,CAUE;;AAVF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GA/DQD,M;;KAAAA,M;AAgET,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\n//const hour = [];\nconst spd = [];\nconst fdp = [];\nconst afd = [];\nconst linke = [];\nconst gruen = [];\n\nfunction buildData(data) {\n  const cdu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      cdu.push(cdunew);\n    }\n    /*if (data[d]._id.party == \"SPD\") {\n      spd.push(data[d]);\n    }\n    if (data[d]._id.party == \"FDP\") {\n      fdp.push(data[d]);\n    }\n    if (data[d]._id.party == \"AfD\") {\n      afd.push(data[d]);\n    }\n    if (data[d]._id.party == \"Linke\") {\n      linke.push(data[d]);\n    }\n    if (data[d]._id.party == \"Grün\") {\n      gruen.push(data[d]);\n    }*/\n  }\n  return cdu;\n}\nconst t = [];\n\nfunction Charts() {\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n\n  const [cduu, setCDUU] = useState({});\n  const [hour, setHour] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/jsonProcessed\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          //console.log(data);\n          let chartdata = buildData(data);\n          setCDUU(chartdata);\n          console.log(chartdata);\n\n          for (let d in data) {\n            t.push(data[d]._id.hour);\n          }\n          setHour(t);\n          //t.push(chartdata);\n        });\n    };\n    fetchData();\n  }, []);\n\n  console.log(cduu);\n  /*axios.get(\"http://localhost:8080/jsonProcessed\").then((res) => {\n    //console.log(res.data);\n    for (let d in res.data) {\n      if (res.data[d]._id.party == \"CDU\") {\n        let cdunew = {\n          x: res.data[d]._id.hour,\n          y: res.data[d].count,\n        };\n        t.push(cdunew);\n      }\n    }\n  });\n  console.log(t);*/\n\n  return (\n    <div className=\"charts\">\n      {cduu?.length > 0 && (\n        <Bar\n          data={{\n            labels: hour,\n            datasets: [\n              {\n                label: \"cdu\",\n                data: cduu,\n              },\n            ],\n          }}\n          //options={options}\n        />\n      )}\n    </div>\n  );\n}\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}