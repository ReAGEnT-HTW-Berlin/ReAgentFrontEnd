{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/src/Charts.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hour = [];\nconst spd = [];\nconst fdp = [];\nconst afd = [];\nconst linke = [];\nconst gruen = [];\n/*\nfunction buildData(data) {\n  const cdu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      cdu.push(cdunew);\n    }\n    /*if (data[d]._id.party == \"SPD\") {\n      spd.push(data[d]);\n    }\n    if (data[d]._id.party == \"FDP\") {\n      fdp.push(data[d]);\n    }\n    if (data[d]._id.party == \"AfD\") {\n      afd.push(data[d]);\n    }\n    if (data[d]._id.party == \"Linke\") {\n      linke.push(data[d]);\n    }\n    if (data[d]._id.party == \"Grün\") {\n      gruen.push(data[d]);\n    }\n  }\n  return cdu;\n}*/\n\nfunction Charts() {\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n  const t = [];\n  fetch(\"http://localhost:8080/jsonProcessed\").then(response => {\n    return response.json();\n  }).then(data => {\n    console.log(data); //let chartdata = buildData(data);\n    //setCDUU(chartdata);\n    //console.log(chartdata);\n    //t.push(chartdata);\n\n    for (let d in data) {\n      if (data[d]._id.party == \"CDU\") {\n        let cdunew = {\n          x: data[d]._id.hour,\n          y: data[d].count\n        };\n        t.push(cdunew);\n      }\n    }\n\n    setCDUU(t);\n  });\n  console.log(cduu);\n  /*axios.get(\"http://localhost:8080/jsonProcessed\").then((res) => {\n    //console.log(res.data);\n    for (let d in res.data) {\n      if (res.data[d]._id.party == \"CDU\") {\n        let cdunew = {\n          x: res.data[d]._id.hour,\n          y: res.data[d].count,\n        };\n        t.push(cdunew);\n      }\n    }\n  });\n  console.log(t);*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: (t === null || t === void 0 ? void 0 : t.length) > 0 && /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        datasets: [{\n          label: \"cdu\",\n          data: cduu\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/src/Charts.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","axios","hour","spd","fdp","afd","linke","gruen","Charts","t","fetch","then","response","json","data","console","log","d","_id","party","cdunew","x","y","count","push","setCDUU","cduu","length","datasets","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,KAAK,GAAG,EAAd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,GAAkB;AAChB;AACF;AACA;AAEE,QAAMC,CAAC,GAAG,EAAV;AAEAC,EAAAA,KAAK,CAAC,qCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EADc,CAEd;AACA;AACA;AACA;;AACA,SAAK,IAAIG,CAAT,IAAcH,IAAd,EAAoB;AAClB,UAAIA,IAAI,CAACG,CAAD,CAAJ,CAAQC,GAAR,CAAYC,KAAZ,IAAqB,KAAzB,EAAgC;AAC9B,YAAIC,MAAM,GAAG;AACXC,UAAAA,CAAC,EAAEP,IAAI,CAACG,CAAD,CAAJ,CAAQC,GAAR,CAAYhB,IADJ;AAEXoB,UAAAA,CAAC,EAAER,IAAI,CAACG,CAAD,CAAJ,CAAQM;AAFA,SAAb;AAIAd,QAAAA,CAAC,CAACe,IAAF,CAAOJ,MAAP;AACD;AACF;;AACDK,IAAAA,OAAO,CAAChB,CAAD,CAAP;AACD,GApBH;AAqBAM,EAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACG,CAAAjB,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEkB,MAAH,IAAY,CAAZ,iBACC,QAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,KADT;AAEEf,UAAAA,IAAI,EAAEY;AAFR,SADQ;AADN;AADR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;KA3DQlB,M;AA4DT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nconst hour = [];\nconst spd = [];\nconst fdp = [];\nconst afd = [];\nconst linke = [];\nconst gruen = [];\n/*\nfunction buildData(data) {\n  const cdu = [];\n\n  for (let d in data) {\n    if (data[d]._id.party == \"CDU\") {\n      let cdunew = {\n        x: data[d]._id.hour,\n        y: data[d].count,\n      };\n      cdu.push(cdunew);\n    }\n    /*if (data[d]._id.party == \"SPD\") {\n      spd.push(data[d]);\n    }\n    if (data[d]._id.party == \"FDP\") {\n      fdp.push(data[d]);\n    }\n    if (data[d]._id.party == \"AfD\") {\n      afd.push(data[d]);\n    }\n    if (data[d]._id.party == \"Linke\") {\n      linke.push(data[d]);\n    }\n    if (data[d]._id.party == \"Grün\") {\n      gruen.push(data[d]);\n    }\n  }\n  return cdu;\n}*/\nfunction Charts() {\n  /*const [hour, setHour] = useState({});\n  const [party, setParty] = useState({});\n  const [count, setCount] = useState({});*/\n\n  const t = [];\n\n  fetch(\"http://localhost:8080/jsonProcessed\")\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      console.log(data);\n      //let chartdata = buildData(data);\n      //setCDUU(chartdata);\n      //console.log(chartdata);\n      //t.push(chartdata);\n      for (let d in data) {\n        if (data[d]._id.party == \"CDU\") {\n          let cdunew = {\n            x: data[d]._id.hour,\n            y: data[d].count,\n          };\n          t.push(cdunew);\n        }\n      }\n      setCDUU(t);\n    });\n  console.log(cduu);\n  /*axios.get(\"http://localhost:8080/jsonProcessed\").then((res) => {\n    //console.log(res.data);\n    for (let d in res.data) {\n      if (res.data[d]._id.party == \"CDU\") {\n        let cdunew = {\n          x: res.data[d]._id.hour,\n          y: res.data[d].count,\n        };\n        t.push(cdunew);\n      }\n    }\n  });\n  console.log(t);*/\n\n  return (\n    <div className=\"charts\">\n      {t?.length > 0 && (\n        <Bar\n          data={{\n            datasets: [\n              {\n                label: \"cdu\",\n                data: cduu,\n              },\n            ],\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}