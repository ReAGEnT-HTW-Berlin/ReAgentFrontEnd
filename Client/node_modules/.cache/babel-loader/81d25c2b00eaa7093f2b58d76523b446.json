{"ast":null,"code":"var _jsxFileName = \"/Users/nasiranebi/Projects/twitter_project/src/TotalTweets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction buildChartData(data) {\n  const chartdata = [];\n\n  for (let d in data) {\n    chartdata.push(data[d].count);\n  }\n\n  console.log(chartdata);\n  return chartdata;\n}\n\nfunction Charts() {\n  _s();\n\n  const [d, setD] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/countTotalByParty\").then(response => {\n        return response.json();\n      }).then(data => {\n        console.log(data);\n        let chartData = buildChartData(data);\n        setD(chartData);\n        console.log(chartData);\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: [\"Linke\", \"SPD\", \"FPD\", \"Grün\", \"CDU\", \"AfD\", \"Parteilos\", \"CSU\"],\n        datasets: [{\n          label: \"total tweets 2017-2021\",\n          data: d,\n          backgroundColor: \"rgba(54, 162, 235, 0.2)\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Charts, \"fIWOXihKK9OHrCHvEmE4d323QB0=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/nasiranebi/Projects/twitter_project/src/TotalTweets.js"],"names":["React","useEffect","useState","Bar","Line","Pie","Doughnut","buildChartData","data","chartdata","d","push","count","console","log","Charts","setD","fetchData","fetch","then","response","json","chartData","labels","datasets","label","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,QAAzB,QAAyC,iBAAzC;;;AAEA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,QAAMC,SAAS,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAT,IAAcF,IAAd,EAAoB;AAClBC,IAAAA,SAAS,CAACE,IAAV,CAAeH,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAvB;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACA,SAAOA,SAAP;AACD;;AAED,SAASM,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACL,CAAD,EAAIM,IAAJ,IAAYd,QAAQ,CAAC,CAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,SAAS,GAAG,YAAY;AAC5B,YAAMC,KAAK,CAAC,yCAAD,CAAL,CACHC,IADG,CACGC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHG,EAIHF,IAJG,CAIGX,IAAD,IAAU;AACdK,QAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,YAAIc,SAAS,GAAGf,cAAc,CAACC,IAAD,CAA9B;AACAQ,QAAAA,IAAI,CAACM,SAAD,CAAJ;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAZ;AACD,OATG,CAAN;AAUD,KAXD;;AAYAL,IAAAA,SAAS;AACV,GAdQ,EAcN,EAdM,CAAT;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BAEI,QAAC,GAAD;AACE,MAAA,IAAI,EAAE;AACJM,QAAAA,MAAM,EAAE,CACN,OADM,EAEN,KAFM,EAGN,KAHM,EAIN,MAJM,EAKN,KALM,EAMN,KANM,EAON,WAPM,EAQN,KARM,CADJ;AAWJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,wBADT;AAEEjB,UAAAA,IAAI,EAAEE,CAFR;AAGEgB,UAAAA,eAAe,EAAE;AAHnB,SADQ;AAXN;AADR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7CQX,M;;KAAAA,M;AA8CT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Bar, Line, Pie, Doughnut } from \"react-chartjs-2\";\n\nfunction buildChartData(data) {\n  const chartdata = [];\n  for (let d in data) {\n    chartdata.push(data[d].count);\n  }\n  console.log(chartdata);\n  return chartdata;\n}\n\nfunction Charts() {\n  const [d, setD] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"http://localhost:8080/countTotalByParty\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          console.log(data);\n          let chartData = buildChartData(data);\n          setD(chartData);\n          console.log(chartData);\n        });\n    };\n    fetchData();\n  }, []);\n  return (\n    <div className=\"charts\">\n      {\n        <Bar\n          data={{\n            labels: [\n              \"Linke\",\n              \"SPD\",\n              \"FPD\",\n              \"Grün\",\n              \"CDU\",\n              \"AfD\",\n              \"Parteilos\",\n              \"CSU\",\n            ],\n            datasets: [\n              {\n                label: \"total tweets 2017-2021\",\n                data: d,\n                backgroundColor: \"rgba(54, 162, 235, 0.2)\",\n              },\n            ],\n          }}\n        />\n      }\n    </div>\n  );\n}\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}